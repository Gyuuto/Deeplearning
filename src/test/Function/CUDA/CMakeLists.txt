cmake_minimum_required(VERSION 2.8)

find_package(CUDA)

if( CUDA_FOUND )
  add_executable(softmaxTest_CUDA_float softmaxTest_CUDA_float.cpp)
  add_definitions(-DUSE_CUDA)
  include_directories(${CUDA_INCLUDE_DIRS})
  cuda_add_cublas_to_target(softmaxTest_CUDA_float)
  target_link_libraries(softmaxTest_CUDA_float ${GTEST_LIBRARIES})
  target_link_libraries(softmaxTest_CUDA_float ${BLAS_LIBRARIES})
  target_link_libraries(softmaxTest_CUDA_float cuda_kernels)

  add_executable(crossentropyTest_CUDA_float crossentropyTest_CUDA_float.cpp)
  add_definitions(-DUSE_CUDA)
  include_directories(${CUDA_INCLUDE_DIRS})
  cuda_add_cublas_to_target(crossentropyTest_CUDA_float)
  target_link_libraries(crossentropyTest_CUDA_float ${GTEST_LIBRARIES})
  target_link_libraries(crossentropyTest_CUDA_float ${BLAS_LIBRARIES})
  target_link_libraries(crossentropyTest_CUDA_float cuda_kernels)

  add_executable(reluTest_CUDA_float reluTest_CUDA_float.cpp)
  add_definitions(-DUSE_CUDA)
  include_directories(${CUDA_INCLUDE_DIRS})
  cuda_add_cublas_to_target(reluTest_CUDA_float)
  target_link_libraries(reluTest_CUDA_float ${GTEST_LIBRARIES})
  target_link_libraries(reluTest_CUDA_float ${BLAS_LIBRARIES})
  target_link_libraries(reluTest_CUDA_float cuda_kernels)
else()
  message(STATUS "No OpenCL is found. Can't build OpenCL tests.")
endif()
